<?xml version="1.0"?>
<robot>

  <!--Move wheels custom behaviour-->
  <gazebo>
    <plugin name="move_wheels" filename="libmoveWheels_plugin.so">
    </plugin>
  </gazebo>

  <!--Get encoders ticks behaviour-->
  <gazebo>
    <plugin name="encoders_ticks" filename="libencodersTicks_plugin.so">
    </plugin>
  </gazebo>

  <!--Get Odometry-->
  <gazebo>
    <plugin name="get_odom" filename="libodom_plugin.so">
      <frontLeftJoint>front_left_joint</frontLeftJoint>
      <frontRightJoint>front_right_joint</frontRightJoint>
      <wheelSeparation>0.3</wheelSeparation>
      <wheelDiameter>0.08</wheelDiameter>
      <updateRate>40</updateRate>
    </plugin>
  </gazebo>

  <!-- Defining the colors used in this robot -->
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- IMUs -->

  <!-- works well with robot_localisation localisation
  (in robot_pose_ekf you get an error because of the zero covariance in z)-->
  
  <gazebo>
    <plugin name="imu" filename="libhector_gazebo_ros_imu.so">
      <updateRate>40.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <bodyName>imu_link1</bodyName>
      <frameId>imu_link1</frameId>
      <topicName>imu_data_blue</topicName>
      <accelOffset>0 0 0</accelOffset>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateOffset>0 0 0</rateOffset>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingOffset>0</headingOffset>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu" filename="libhector_gazebo_ros_imu.so">
      <updateRate>40.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <bodyName>imu_link2</bodyName>
      <frameId>imu_link2</frameId>
      <topicName>imu_data_red</topicName>
      <accelOffset>0 0 0</accelOffset>
      <accelDrift>0.05 0.05 0.05</accelDrift>
      <accelGaussianNoise>0.5 0.5 0.5</accelGaussianNoise>
      <rateOffset>0 0 0</rateOffset>
      <rateDrift>0.05 0.05 0.05 </rateDrift>
      <rateGaussianNoise>0.5 0.5 0.5 </rateGaussianNoise>
      <headingOffset>10</headingOffset>
      <headingDrift>0.05</headingDrift>
      <headingGaussianNoise>0.5</headingGaussianNoise>
    </plugin>
  </gazebo>


<!-- works well with robot_pose_ekf localisation -->
<!-- <gazebo reference="imu_link1">
  <sensor type="imu" name="imu">
    <imu>
    </imu>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
      <bodyName>base_link</bodyName>
      <frameName>base_link</frameName>
      <topicName>imu_data</topicName>
      <gaussianNoise>0.0000000289</gaussianNoise>
      <updateRateHZ>40.0</updateRateHZ>
      <xyzOffset>0.0 0.0 0.0</xyzOffset>
      <rpyOffset>0.0 0.0 0.0</rpyOffset>
    </plugin>
  </sensor>
</gazebo>-->


<!-- Ground truth odometry -->
<gazebo>
  <plugin filename="libgazebo_ros_p3d.so" name="quadrotor_groundtruth_sim">
    <updateRate>40.0</updateRate>
    <bodyName>base_footprint</bodyName>
    <topicName>ground_truth/state</topicName>
    <gaussianNoise>0.0</gaussianNoise>
    <frameName>map</frameName>
  </plugin>
</gazebo>

<gazebo reference="camera_link">
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
</gazebo>
</robot>
