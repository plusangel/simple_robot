<?xml version="1.0"?>
<robot name="differential_wheeled_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:include filename="$(find simple_robot_description_2wheels)/urdf/wheel.urdf.xacro" />

  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI_2" value="1.570796327" />
  <xacro:property name="DEG_TO_RAD" value="0.017453293" />

  <!-- Main body radius and height -->
  <!-- Main Body Cylinder base   -->
  <xacro:property name="base_height" value="0.02" />
  <xacro:property name="base_radius" value="0.15" />
  <xacro:property name="base_mass" value="5" /> <!-- in kg-->

  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <xacro:property name="caster_f_height" value="0.04" />
  <xacro:property name="caster_f_radius" value="0.025" />
  <xacro:property name="caster_f_mass" value="0.5" /> <!-- in kg-->

  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <xacro:property name="caster_b_height" value="0.04" />
  <xacro:property name="caster_b_radius" value="0.025" />
  <xacro:property name="caster_b_mass" value="0.5" /> <!-- in kg-->

  <!-- Wheels -->
  <xacro:property name="wheel_mass" value="2.5" /> --> <!-- in kg-->
  <xacro:property name="base_x_origin_to_wheel_origin" value="0.25" />
  <xacro:property name="base_y_origin_to_wheel_origin" value="0.3" />
  <xacro:property name="base_z_origin_to_wheel_origin" value="0.0" />

  <!-- Macro for calculating inertia of cylinder -->
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
      iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
      izz="${m*r*r/2}" />
    </xacro:macro>


    <!-- BASE-FOOTPRINT -->
    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
    <link name="base_footprint">
      <inertial>
        <mass value="0.0001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.0001" />
        </inertial>
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <box size="0.001 0.001 0.001" />
          </geometry>
        </visual>
      </link>

      <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
      </gazebo>

      <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
      </joint>

      <!-- BASE-LINK -->
      <!--Actual body/chassis of the robot-->
      <link name="base_link">
        <inertial>
          <mass value="${base_mass}" />
          <origin xyz="0 0 0" />
          <!--The 3x3 rotational inertia matrix. -->
          <cylinder_inertia  m="${base_mass}" r="${base_radius}" h="${base_height}" />
        </inertial>
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <cylinder length="${base_height}" radius="${base_radius}" />
          </geometry>
          <material name="White" />
        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0 " />
          <geometry>
            <cylinder length="${base_height}" radius="${base_radius}" />
          </geometry>
        </collision>
      </link>

      <gazebo reference="base_link">
        <material>Gazebo/White</material>
        <turnGravityOff>false</turnGravityOff>
      </gazebo>

      <!--Caster front  -->

      <link name="caster_front_link">
        <visual>
          <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
          <geometry>
            <sphere radius="${caster_f_radius}" />
          </geometry>
          <material name="Black" />
        </visual>
        <collision>
          <geometry>
            <sphere radius="${caster_f_radius}" />
          </geometry>
          <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
        </collision>
        <inertial>
          <mass value="${caster_f_mass}" />
          <origin xyz="0 0 0" />
          <inertia ixx="0.001" ixy="0.0" ixz="0.0"
            iyy="0.001" iyz="0.0"
            izz="0.001" />
          </inertial>
        </link>


        <joint name="caster_front_joint" type="fixed">
          <parent link="base_link"/>
          <child link="caster_front_link"/>
          <origin xyz="0.115 0.0 0.007" rpy="${-M_PI/2} 0 0"/>
        </joint>


        <gazebo reference="caster_front_link">
          <material>Gazebo/Orange</material>
          <turnGravityOff>false</turnGravityOff>
        </gazebo>


        <!--Caster back  -->
        <link name="caster_back_link">
          <visual>
            <origin xyz="0.02 0.02 0 " rpy="${M_PI/2} 0 0" />
            <geometry>
              <sphere radius="${caster_b_radius}" />
            </geometry>
            <material name="Black" />
          </visual>
          <collision>
            <geometry>
              <sphere radius="${caster_b_radius}" />
            </geometry>
            <origin xyz="0 0.02 0 " rpy="${M_PI/2} 0 0" />
          </collision>
          <inertial>
            <mass value="${caster_b_mass}" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.001" ixy="0.0" ixz="0.0"
              iyy="0.001" iyz="0.0"
              izz="0.001" />
            </inertial>
          </link>

          <joint name="caster_back_joint" type="fixed">
            <parent link="base_link"/>
            <child link="caster_back_link"/>
            <origin xyz="-0.135 0.0 0.009" rpy="${-M_PI/2} 0 0"/>
          </joint>

          <gazebo reference="caster_back_link">
            <material>Gazebo/Orange</material>
            <turnGravityOff>false</turnGravityOff>
          </gazebo>

          <!-- Wheel Definitions -->

          <wheel fb="front" lr="right" parent="base_link" translateX="0" translateY="0.5" flipY="1"/>
          <wheel fb="front" lr="left" parent="base_link" translateX="0" translateY="-0.5" flipY="1"/>

            <!--
            <joint name="hokuyo_joint" type="fixed">
              <origin xyz="0 0 0.04" rpy="0 0 0"/>
              <parent link="base_link"/>
              <child link="hokuyo_link"/>
            </joint>

          Hokuyo Laser
          <link name="hokuyo_link">
            <collision>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                <box size="0.1 0.1 0.1"/>
              </geometry>
            </collision>

            <visual>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                <mesh filename="package://simple_robot_description_2wheels/meshes/hokuyo.dae"/>
              </geometry>
            </visual>

            <inertial>
              <mass value="1e-5" />
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>
          </link>-->


          <!-- Imu 1-->
          <link name="imu_link1">
            <visual>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                <box size="0.01 0.01 0.01" />
              </geometry>
               <material name="Blue" />
            </visual>

            <inertial>
              <mass value="0.001"/>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>
          </link>

          <gazebo reference="imu_link1">
            <material>Gazebo/Blue</material>
            <turnGravityOff>false</turnGravityOff>
          </gazebo>

          <joint name="imu_joint1" type="fixed">
            <origin xyz="0.135 0 0.01" rpy="0 0 0"/>
            <parent link="base_link" />
            <child link="imu_link1" />
          </joint>

          <!-- Imu 2-->
          <link name="imu_link2">
            <visual>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                <box size="0.01 0.01 0.01" />
              </geometry>
               <material name="Red" />
            </visual>

            <inertial>
              <mass value="0.001"/>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>
          </link>

          <gazebo reference="imu_link2">
            <material>Gazebo/Red</material>
            <turnGravityOff>false</turnGravityOff>
          </gazebo>

          <joint name="imu_joint2" type="fixed">
            <origin xyz="-0.135 0 0.01" rpy="0 0 0"/>
            <parent link="base_link" />
            <child link="imu_link2" />
          </joint>

          <!-- Kinect -->
          <joint name="camera_rgb_joint" type="fixed">
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="camera_rgb_frame" />
          </joint>

          <link name="camera_rgb_frame"/>

          <joint name="camera_rgb_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
            <parent link="camera_rgb_frame" />
            <child link="camera_rgb_optical_frame" />
          </joint>

          <link name="camera_rgb_optical_frame"/>

          <joint name="camera_joint" type="fixed">
            <origin xyz="-0.031 0 -0.016" rpy="0 0 0"/>
            <parent link="camera_rgb_frame"/>
            <child link="camera_link"/>
          </joint>

          <link name="camera_link">
            <visual>
              <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
              <geometry>
                <mesh filename="package://simple_robot_description_2wheels/meshes/kinect.dae"/>
              </geometry>
            </visual>
            <collision>
              <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
              <geometry>
                <box size="0.07271 0.27794 0.073"/>
              </geometry>
            </collision>
            <inertial>
              <mass value="0.564" />
              <origin xyz="0 0 0" />
              <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                       iyy="0.000498940" iyz="0.0"
                       izz="0.003879257" />
            </inertial>
          </link>

          <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch
               files. However, for Gazebo simulation we need them, so we add them here.
               (Hence, don't publish them additionally!) -->
          <joint name="camera_depth_joint" type="fixed">
            <origin xyz="0 0 0" rpy="0 0 0" />
            <parent link="camera_rgb_frame" />
            <child link="camera_depth_frame" />
          </joint>
          <link name="camera_depth_frame"/>

          <joint name="camera_depth_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
            <parent link="camera_depth_frame" />
            <child link="camera_depth_optical_frame" />
          </joint>
          <link name="camera_depth_optical_frame"/>

    <!-- Kinect sensor for simulation
    <turtlebot_sim_3dsensor/> -->


    <!-- Bring in simulation data for Gazebo.-->
    <xacro:include filename="$(find simple_robot_description_2wheels)/urdf/diff_wheeled_robot.gazebo" />

  </robot>
